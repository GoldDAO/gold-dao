spec:
  inputs:
    src-folder:
      description: Name of the source folder, should be the same as the canister's cargo package name.
      options: [
          'gldt_swap',
          'buyback_burn',
          'icp_neuron',
          'token_metrics',
          'sns_rewards',
          'sns_neuron_controller',
          'integration_testing',
          'management',
          'gldt_swap',
          # "super_stats_v3",
        ]
---
# Rust canister unit test with coverage

$[[ inputs.src-folder ]] unit tests:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_REF_NAME == "develop"
      changes:
        - 'backend/libraries/**/*.{rs,toml,lock,md}'
        - 'backend/external_canisters/**/*.{rs,toml,lock,md}'
        - 'backend/canisters/$[[ inputs.src-folder ]]/**/*.{rs,toml,lock,md}'
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
  extends: .rust template
  tags:
    - dind
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: '/certs'
    DOCKER_SECURITY_OPT: '--security-opt seccomp=unconfined'
  script:
    # - cargo tarpaulin -p $[[ inputs.src-folder ]] -j 2 --lib --no-fail-fast -o Xml
    - cargo test -p $[[ inputs.src-folder ]]
  # coverage: /^\d+.\d+% coverage/
  # artifacts:
  #   reports:
  #     coverage_report:
  #       coverage_format: cobertura
  #       path: cobertura.xml
