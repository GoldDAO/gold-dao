spec:
  inputs:
    src-folder:
      description: The NextJS project folder name. Must be located in the /client/ folder
      options: ["gldt_landing_page", "gldt_explorer", "gld_dashboard", "gldt_swap_app"]
---
# Frontend builds

# $[[ inputs.src-folder ]] test build:
#   stage: test
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#       changes:
#         - "client/$[[ inputs.src-folder ]]/*.{js,json}"
#         - "client/$[[ inputs.src-folder ]]/**/*.{js,jsx,ts,tsx,md,mdx,css,html,svg}"
#   extends: .node template
#   script:
#     - npm run build:$[[ inputs.src-folder ]]
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-$[[ inputs.src-folder ]]-TEST"
#     paths:
#       - client/$[[ inputs.src-folder ]]/out
#     expire_in: 1 day

# artifact_short:
#   artifacts:
#       name: "${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}-$[[ inputs.src-folder ]]_${ENV}_BUILD"
#       paths:
#         - client/$[[ inputs.src-folder ]]/out
#       reports:
#         dotenv: $[[ inputs.src-folder ]]_deploy.env
#       expire_in: 1 day

# artifact_long:
#   artifacts:
#       name: "${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}-$[[ inputs.src-folder ]]_${ENV}_BUILD"
#       paths:
#         - client/$[[ inputs.src-folder ]]/out
#       reports:
#         dotenv: $[[ inputs.src-folder ]]_deploy.env
#       expire_in: 6 months

.build template:
  stage: build
  rules:
    changes:
      - "client/$[[ inputs.src-folder ]]/*.{js,json}"
      - "client/$[[ inputs.src-folder ]]/**/*.{js,jsx,ts,tsx,md,mdx,css,html,svg}"
  extends: .node template
  script:
    - ENV=$ENV npm run build:$[[ inputs.src-folder ]]
    - CAN_URL=$(CAN=$CANISTER_NAME NET=$NETWORK node -e 'const ids=require("./canister_ids.json"); console.log(`https://${ids[process.env.CAN][process.env.NET]}.icp0.io`);')
    - echo "$(echo '$[[ inputs.src-folder ]]' | tr '[:lower:]' '[:upper:]')_URL=$CAN_URL" > $[[ inputs.src-folder ]]_deploy.env
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}-$[[ inputs.src-folder ]]_${ENV}_BUILD"
    paths:
      - client/$[[ inputs.src-folder ]]/out
    reports:
      dotenv: $[[ inputs.src-folder ]]_deploy.env
    expire_in: 1 month
  environment:
    name: $[[ inputs.src-folder ]] frontend app
    deployment_tier: $ENV
    action: prepare

$[[ inputs.src-folder ]] staging build:
  extends: .build template
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop" && $CI_PIPELINE_SOURCE != "merge_request_event"
  variables:
    CANISTER_NAME: "$[[ inputs.src-folder ]]"
    NETWORK: "staging" # staging | preprod | ic
    ENV: "staging" # staging | preprod | prod

$[[ inputs.src-folder ]] preprod build:
  extends: .build template
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop" && $CI_PIPELINE_SOURCE != "merge_request_event"
  variables:
    CANISTER_NAME: "$[[ inputs.src-folder ]]"
    NETWORK: "preprod" # staging | preprod | ic
    ENV: "preprod" # staging | preprod | prod

$[[ inputs.src-folder ]] prod build:
  extends: .build template
  rules:
    - if: $CI_COMMIT_TAG =~ '/^$[[ inputs.src-folder ]]-v\d+\.\d+\.\d+$/' && $CI_COMMIT_REF_NAME == "master"
  variables:
    CANISTER_NAME: "$[[ inputs.src-folder ]]"
    NETWORK: "ic" # staging | preprod | ic
    ENV: "prod" # staging | preprod | prod


# $[[ inputs.src-folder ]] staging build:
#   stage: build
#   rules:
#     - if: $CI_COMMIT_REF_NAME == "develop" && $CI_PIPELINE_SOURCE != "merge_request_event"
#       changes:
#         - "client/$[[ inputs.src-folder ]]/*.{js,json}"
#         - "client/$[[ inputs.src-folder ]]/**/*.{js,jsx,ts,tsx,md,mdx,css,html,svg}"
#   extends: .node template
#   variables:
#     CANISTER_NAME: "$[[ inputs.src-folder ]]"
#     NETWORK: "staging"
#     ENV: "staging"
#   script:
#     - ENV=staging npm run build:$[[ inputs.src-folder ]]
#     - CAN_URL=$(CAN=$CANISTER_NAME NET=$NETWORK node -e 'const ids=require("./canister_ids.json"); console.log(`https://${ids[process.env.CAN][process.env.NET]}.icp0.io`);')
#     - echo "$(echo '$[[ inputs.src-folder ]]' | tr '[:lower:]' '[:upper:]')_URL=$CAN_URL" > $[[ inputs.src-folder ]]_deploy.env
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}-$[[ inputs.src-folder ]]_STAGING_BUILD"
#     paths:
#       - client/$[[ inputs.src-folder ]]/out
#     reports:
#       dotenv: $[[ inputs.src-folder ]]_deploy.env
#     expire_in: 1 day
#   environment:
#     name: $[[ inputs.src-folder ]] frontend app
#     deployment_tier: staging
#     action: prepare

# $[[ inputs.src-folder ]] preprod build:
#   stage: build
#   rules:
#     - if: $CI_COMMIT_REF_NAME == "develop" && $CI_PIPELINE_SOURCE != "merge_request_event"
#       changes:
#         - "client/$[[ inputs.src-folder ]]/*.{js,json}"
#         - "client/$[[ inputs.src-folder ]]/**/*.{js,jsx,ts,tsx,md,mdx,css,html,svg}"
#   extends: .node template
#   variables:
#     CANISTER_NAME: "$[[ inputs.src-folder ]]"
#     NETWORK: "preprod"
#   script:
#     - ENV=preprod npm run build:$[[ inputs.src-folder ]]
#     - CAN_URL=$(CAN=$CANISTER_NAME NET=$NETWORK node -e 'const ids=require("./canister_ids.json"); console.log(`https://${ids[process.env.CAN][process.env.NET]}.icp0.io`);')
#     - echo "$(echo '$[[ inputs.src-folder ]]' | tr '[:lower:]' '[:upper:]')_URL=$CAN_URL" > $[[ inputs.src-folder ]]_deploy.env
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}-$[[ inputs.src-folder ]]_PREPROD_BUILD"
#     paths:
#       - client/$[[ inputs.src-folder ]]/out
#     reports:
#       dotenv: $[[ inputs.src-folder ]]_deploy.env
#     expire_in: 1 day
#   environment:
#     name: $[[ inputs.src-folder ]] frontend app
#     deployment_tier: staging
#     action: prepare

# $[[ inputs.src-folder ]] production build:
#   stage: build
#   rules:
#     - if: $CI_COMMIT_TAG =~ '/^$[[ inputs.src-folder ]]-v\d+\.\d+\.\d+$/' && $CI_COMMIT_REF_NAME == "master"
#       changes:
#         - "client/$[[ inputs.src-folder ]]/*.{js,json}"
#         - "client/$[[ inputs.src-folder ]]/**/*.{js,jsx,ts,tsx,md,mdx,css,html,svg}"
#   extends: .node template
#   variables:
#     CANISTER_NAME: "$[[ inputs.src-folder ]]"
#     NETWORK: "ic"
#   script:
#     - ENV=prod npm run build:$[[ inputs.src-folder ]]
#     - CAN_URL=$(CAN=$CANISTER_NAME NET=$NETWORK node -e 'const ids=require("./canister_ids.json"); console.log(`https://${ids[process.env.CAN][process.env.NET]}.icp0.io`);')
#     - echo "$(echo '$[[ inputs.src-folder ]]' | tr '[:lower:]' '[:upper:]')_URL=$CAN_URL" > $[[ inputs.src-folder ]]_deploy.env
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-$[[ inputs.src-folder ]]"
#     paths:
#       - client/$[[ inputs.src-folder ]]/out
#     reports:
#       dotenv: $[[ inputs.src-folder ]]_deploy.env
#     expire_in: 6 months
#   environment:
#     name: $[[ inputs.src-folder ]] frontend app
#     deployment_tier: production
#     action: prepare
