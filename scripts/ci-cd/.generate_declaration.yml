spec:
  inputs:
    src-folder:
      description: Generate declatations for the canister
      options:
        [
          "cycles_manager",
          "gldt_core",
          "icp_neuron",
          "management",
          "sns_rewards",
          "token_metrics"
        ]
---
# Frontend builds

$[[ inputs.src-folder ]] generate test declaration:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "backend/libraries/**/*.{rs,toml}"
        - "backend/external_canisters/**/*.{rs,toml}"
        - "backend/canisters/$[[ inputs.src-folder ]]/**/*.{rs,toml}"
      needs:
        - "$[[ inputs.src-folder ]] test build"
  script:
    - dfx generate $[[ inputs.src-folder ]]
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}-TEST-declarations"
    paths:
      - backend/**/declarations
    expire_in: 1 day

$[[ inputs.src-folder ]] generate declaration:
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
      when: never
    - if: $CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME =~ '/^(?:gld_dashboard)-v\d+\.\d+\.\d+$/'
      changes:
        - "backend/libraries/**/*.{rs,toml}"
        - "backend/external_canisters/**/*.{rs,toml}"
        - "backend/canisters/$[[ inputs.src-folder ]]/**/*.{rs,toml}"
      needs:
        - "$[[ inputs.src-folder ]] canister build"
  script:
    - dfx generate $[[ inputs.src-folder ]]
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}-declarations"
    paths:
      - backend/**/api
    expire_in: 1 day
