spec:
  inputs:
    src-folder:
      description: Name of the source folder, should be the same as the canister's cargo package name.
      options:
        [
          'gldt_swap',
          'icp_neuron',
          'management',
          'sns_neuron_controller',
          'sns_rewards',
          'super_stats_v3',
          'token_metrics',
          'gldt_swap',
        ]
---
# Rust canisters deployments

$[[ inputs.src-folder ]] staging deploy:
  stage: deploy
  resource_group: backend canister staging deployment
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop" && $CI_PIPELINE_SOURCE != "merge_request_event"
      changes:
        - 'backend/canisters/$[[ inputs.src-folder ]]/**/*.{rs,toml,lock,md}'
  variables:
    TARGET_NETWORK: staging
    PEM_FILE: '${PEM_FILE_STAGING}'
  needs: ['$[[ inputs.src-folder ]] canister build', 'integration tests']
  before_script:
    - !reference [.import dfx identity, before_script]
  script:
    - . scripts/canister-deploy/deploy-$[[ inputs.src-folder ]].sh $TARGET_NETWORK
  environment:
    name: $[[ inputs.src-folder ]]
    deployment_tier: staging
    action: start

$[[ inputs.src-folder ]] production deploy:
  stage: deploy
  resource_group: backend canister production deployment
  rules:
    - if: $CI_COMMIT_TAG =~ '/^$[[ inputs.src-folder ]]-v\d+\.\d+\.\d+$/'
      changes:
        - 'backend/libraries/**/*.{rs,toml,lock,md}'
        - 'backend/external_canisters/**/*.{rs,toml,lock,md}'
        - 'backend/canisters/$[[ inputs.src-folder ]]/**/*.{rs,toml,lock,md}'
      when: manual
  variables:
    TARGET_NETWORK: ic
    PEM_FILE: '${PEM_FILE_PRODUCTION}'
  needs: ['$[[ inputs.src-folder ]] canister build', 'integration tests']
  before_script:
    - !reference [.import dfx identity, before_script]
  script:
    - . scripts/canister-deploy/deploy-$[[ inputs.src-folder ]].sh $TARGET_NETWORK
  environment:
    name: $[[ inputs.src-folder ]]
    deployment_tier: production
    action: start
