[workspace]
members = [
  "backend/canisters/buyback_burn/impl",
  "backend/canisters/buyback_burn/api",
  "backend/canisters/gldt_swap/common",
  "backend/canisters/gldt_swap/impl",
  "backend/canisters/gldt_swap/api",
  "backend/canisters/gldt_swap/archive",
  "backend/canisters/gldt_swap/api_archive",
  "backend/canisters/gldt_stake/common",
  "backend/canisters/gldt_stake/impl",
  "backend/canisters/gldt_stake/api",
  "backend/canisters/gldt_stake/api_archive",
  "backend/canisters/gldt_stake/archive",
  "backend/canisters/management/impl",
  "backend/canisters/management/api",
  "backend/canisters/sns_rewards/impl",
  "backend/canisters/sns_rewards/api",
  "backend/canisters/super_stats_v3/api",
  "backend/canisters/super_stats_v3/impl",
  "backend/canisters/super_stats_v3/c2c_client",
  "backend/canisters/icp_neuron/api",
  "backend/canisters/icp_neuron/common",
  "backend/canisters/icp_neuron/impl",
  "backend/canisters/sns_neuron_controller/impl",
  "backend/canisters/token_metrics/impl",
  "backend/canisters/usdg_minter/impl",
  "backend/canisters/usdg_minter/api",
  "backend/external_canisters/sns_governance/api",
  "backend/external_canisters/sns_governance/c2c_client",
  "backend/external_canisters/wtn_protocol/api",
  "backend/external_canisters/wtn_protocol/c2c_client",
  "backend/external_canisters/origyn_nft_reference/api",
  "backend/external_canisters/origyn_nft_reference/c2c_client",
  "backend/external_canisters/gldt_swap_archive/c2c_client",
  "backend/libraries/candid_gen",
  "backend/libraries/canister_client",
  "backend/libraries/canister_client_macros",
  "backend/libraries/canister_logger",
  "backend/libraries/canister_state_macros",
  "backend/libraries/canister_time",
  "backend/libraries/canister_tracing_macros",
  "backend/libraries/icpswap_client",
  "backend/libraries/http_request",
  "backend/libraries/serializer",
  "backend/libraries/stable_memory",
  "backend/libraries/types",
  "backend/libraries/utils",
  "backend/integration_testing",
]
resolver = "2"

[profile.release]
lto = "thin"
panic = "abort"

[workspace.dependencies]
assert_matches = "1.5.0"
candid = { version = "0.10.2", features = ["value"] }
ciborium = "0.2.2"
futures = "0.3.29"
# Enable `custom` feature of k256's getrandom dependency. See icp_neuron/impl/src/ecdsa.rs for more details.
getrandom = { version = "0.2.12", features = ["custom"] }
hex = "0.4.3"
ic-cdk = "0.16.0"
ic-cdk-macros = "0.13.2"
ic-cdk-timers = "0.7.0"
ic-ledger-types = "0.10.0"
ic-metrics-encoder = "1.1.1"
ic-stable-structures = "0.6.4"
ic-transport-types = "0.34.0"
ic-xrc-types = "1.2.0"
ic0 = "0.23.0"
icrc-ledger-types = "0.1.6"
k256 = "0.13.1"
minicbor = { version = "0.19.1", features = ["alloc", "derive"] }
minicbor-derive = "0.13.0"
proc-macro2 = "1.0.78"
quote = "1.0.33"
rmp-serde = "1.1.2"
rust_decimal = "1.36.0"
scopeguard = "1.2.0"
serde = "1.0.196"
serde_bytes = "0.11.12"
serde_cbor = "0.11.2"
serde_json = "1.0.108"
serde_with = "3.7.0"
serde_yaml = "0.9.29"
serde_tokenstream = "0.2.0"
sha2 = "0.10.8"
syn = { version = "2.0.99", features = ["full"] }
tracing = "0.1.40"
tracing-attributes = "0.1.27"
tracing-subscriber = "0.3.18"
num-bigint = "0.4.4"
time = { version = "0.3.36", features = [
  "macros",
  "serde",
  "parsing",
  "formatting",
] }
pocket-ic = "5.0.0"
async-trait = "0.1.81"
enum_dispatch = "0.3.13"
typetag = "0.2.18"
num-traits = "0.2.19"
