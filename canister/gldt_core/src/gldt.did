type Conf = record {
    gldt_ledger_canister_id : principal;
    gldt_nft_canister_ids : vec record { principal; NftCanisterConf};
};
type NftCanisterConf = record { grams : nat16; };
type Offer = record {
    block_height : nat64;
    tokens_minted : Tokens;
};
type OfferRequest = record {
    nft_id : text;
    to_subaccount : vec nat8;
    requested_memo : nat64;
};
type Result = variant { Ok : Offer; Err : text };
type Tokens = record { e8s : nat64 };


type GldtNft = record {
    requested_memo : nat64;
    to_subaccount : vec nat8;
    minted : opt GldtNftMinted;
    grams : nat16;
    gldt_nft_canister_id : principal;
    gldt_minting_timestamp_seconds : nat64;
};
type GldtNftBurned = record {
    burn_block_height : nat64
};
type GldtNftMinted = record {
    mint_block_height : nat64;
    last_audited_timestamp_seconds : nat64;
    burned : opt GldtNftBurned;
};
type InfoRequest = record {
    source_canister: principal;    
    nft_id : text;
};

type SaleStatusShared = record { token_id : text };
type SubAccountInfo = record { account : SubAccoutInfo2 };
type SubAccoutInfo2 = record { sub_account : vec nat8 };
type SubscriberNotification = record {
    sale : SaleStatusShared;
    escrow_info : SubAccountInfo;
};

type NftInfo = record { info : opt GldtNft };

service : (opt Conf) -> {
    request_offer : (OfferRequest) -> (Result);
    nft_info : (InfoRequest) -> (NftInfo) query;
    notify_sale_nft_origyn : (SubscriberNotification) -> ();
}

