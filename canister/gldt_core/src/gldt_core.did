type Conf = record {
  gldt_nft_canister_ids : vec record { principal; NftCanisterConf };
  gldt_ledger_canister_id : principal;
};
type GldtNft = record {
  requested_memo : nat64;
  to_subaccount : vec nat8;
  minted : opt GldtNftMinted;
  grams : nat16;
  gldt_nft_canister_id : principal;
  gldt_minting_timestamp_seconds : nat64;
};
type GldtNftBurned = record { burn_block_height : nat64 };
type GldtNftMinted = record {
  mint_block_height : nat64;
  last_audited_timestamp_seconds : nat64;
  burned : opt GldtNftBurned;
};
type InfoRequest = record { nft_id : text; source_canister : principal };
type NftCanisterConf = record { grams : nat16 };
type NftInfo = record { info : opt GldtNft };
type Offer = record { block_height : nat64; tokens_minted : Tokens };
type OfferRequest = record {
  nft_id : text;
  requested_memo : nat64;
  to_subaccount : vec nat8;
};
type Result = variant { Ok : Offer; Err : text };
type SaleStatusShared = record { token_id : text };
type SubAccountInfo = record { account : SubAccoutInfo2 };
type SubAccoutInfo2 = record { sub_account : vec nat8 };
type SubscriberNotification = record {
  sale : SaleStatusShared;
  escrow_info : SubAccountInfo;
};
type Tokens = record { e8s : nat64 };
service : {
  get_conf : () -> (Conf) query;
  nft_info : (InfoRequest) -> (NftInfo) query;
  notify_sale_nft_origyn : (SubscriberNotification) -> ();
  request_offer : (OfferRequest) -> (Result);
}