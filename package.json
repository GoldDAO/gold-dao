{
  "name": "gldt-monorepo",
  "description": "GLDT frontend app and GLDT canister",
  "author": "GoldDAO",
  "workspaces": [
    "client/swap_app",
    "client/landing_page",
    "client/explorer"
  ],
  "license": "AGPL-3.0-only",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "dev:swap_app": "npm run --workspace swap_app develop",
    "dev:landing": "npm run --workspace landing_page develop",
    "dev:explorer": "npm run --workspace explorer develop",
    "build": "npm run build:backdid && npm run build:back && npm run build:frontends",
    "build:frontends": "npm run build:swap_app && npm run build:landing_page && npm run build:explorer",
    "build:swap_app": "npm run --workspace swap_app build",
    "build:landing_page": "npm run --workspace landing_page build",
    "build:explorer": "npm run --workspace explorer build",
    "build:back": "scripts/build-canister.sh gldt_core && scripts/build-canister.sh gldt_fee_compensation && scripts/build-canister.sh sns_rewards",
    "build:backdid": "scripts/build-canister.sh --wasmonly gldt_core && scripts/build-canister.sh --wasmonly gldt_fee_compensation && scripts/build-canister.sh --wasmonly sns_rewards && npm run build:candid && npm run build:declarations && npm run build:back",
    "build:candid": "scripts/generate-did.sh gldt_core & scripts/generate-did.sh gldt_fee_compensation & scripts/generate-did.sh sns_rewards",
    "build:declarations": "dfx generate && scripts/refactor_nft_declarations.sh",
    "lint": "npm run lint:back && npm run lint:frontends",
    "lint:back": "cargo clippy",
    "lint:frontends": "npm run lint:swap_app && npm run lint:landing && npm run lint:explorer",
    "lint:swap_app": "npm run --workspace swap_app lint",
    "lint:landing": "npm run --workspace landing_page lint",
    "lint:explorer": "npm run --workspace explorer lint",
    "deploy": "NETWORK='local' scripts/local-deploy.sh",
    "start": "dfx stop && dfx start --background --clean && npm run deploy",
    "stop": "dfx stop",
    "test": "npm run build:backdid && cargo tarpaulin --count -o html",
    "postinstall": "rustup update; rustup component add clippy; echo 'If installing locally, you should also ensure that ic-wasm is installed (cargo install ic-wasm), as well as wasmtime (see https://wasmtime.dev ).'"
  },
  "devDependencies": {
    "eslint": "8.40.0"
  },
  "engines": {
    "node": "^18.16.0",
    "npm": "^9.5.0"
  }
}
